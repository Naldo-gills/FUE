<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>